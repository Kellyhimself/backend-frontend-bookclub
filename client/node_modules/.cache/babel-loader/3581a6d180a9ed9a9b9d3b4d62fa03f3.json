{"ast":null,"code":"var _jsxFileName = \"/home/kellyhimself/Development/phase-4/Backend-Bookclub/client/src/pages/BookClubPage.js\";\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\n//import Comments from \"../components/Comment\";\nimport NewComment from \"../components/NewComment.js\";\n//import CommentList from \"../components/CommentList.js\";\n//import DicussionModal from \"../components/CommentList.js\";\n\nconst testUser = {\n  username: \"Duane\"\n};\n//sample bookclub for testing\nconst testClub = {\n  id: 1,\n  name: \"Social Justice\",\n  books: [{\n    id: 1,\n    title: \"reject finance bill\"\n  }, {\n    id: 2,\n    title: \"must go\"\n  }],\n  cover: \"https://i.pinimg.com/736x/28/8d/e3/288de3c1d0b35cc50bc018acb879573c.jpg\",\n  description: \"Books focusing on social issues and activism.\",\n  genre: \"Social Justice\",\n  members: [{\n    id: 1,\n    name: \"Kelly1\"\n  }, {\n    id: 2,\n    name: \"Kelly2\"\n  }, {\n    id: 3,\n    name: \"Kelly3\"\n  }, {\n    id: 4,\n    name: \"Kelly4\"\n  }],\n  comments: [{\n    rname: \"User1\",\n    body: \"Great club!\",\n    created_at: \"2024-07-12T10:30:00Z\"\n  }, {\n    id: 2,\n    username: \"User2\",\n    body: \"I love the discussions here.\",\n    created_at: \"2024-07-12T11:15:00Z\"\n  }]\n};\nconst BookClubPage = () => {\n  const [bookClub] = useState(null);\n  const {\n    id\n  } = useParams();\n  const [setComments] = useState([]);\n  //const [user, setUser] = useState(null); // Placeholder for user, ensure it's defined\n\n  //Fetch the clicked bookclub\n  /*   useEffect(() => {\n    fetch(`/book_clubs/${id}`)\n      .then((response) => response.json())\n      .then((data) => setBookClub(data));\n  }, [id]);\n   if (!bookClub) {\n    return <Loading>Loading...</Loading>;\n  }\n  */\n\n  //fetch comments from the database\n  const handleAddComment = newComment => {\n    fetch(`/book_clubs/${id}/comments`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newComment)\n    }).then(response => {\n      if (response.status === 201) {\n        // Comment added successfully\n        alert(\"comment added\");\n      } else {\n        // Handle error\n        alert(\"there was an error adding your comment\");\n      }\n    }).catch(error => {\n      // Handle error\n    });\n    if (!bookClub) {\n      return /*#__PURE__*/React.createElement(Loading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    }\n    setComments([...testClub.comments, newComment]);\n  };\n\n  // const handleDeleteComment = (id) => {\n  //   const updatedComments = comments.filter((comment) => comment.id !== id);\n  //   setComments(updatedComments);\n  // };\n\n  // const handleUpdateComment = (updatedCommentObj) => {\n  //   const updatedComment = comments.map((comment) => {\n  //     if (comment.id === updatedCommentObj.id) {\n  //       return updatedCommentObj;\n  //     } else {\n  //       return comment;\n  //     }\n  //   });\n  //   setComments(updatedComment);\n  // };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, testClub.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, testClub.description)), /*#__PURE__*/React.createElement(Section, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, \"Members\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, testClub.members.map(member => /*#__PURE__*/React.createElement(\"li\", {\n    key: member.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, member.name)))), /*#__PURE__*/React.createElement(Section, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, \"Available Books\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, testClub.books.map(book => /*#__PURE__*/React.createElement(\"li\", {\n    key: book.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, book.title))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, \"Comments\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, testClub.comments.map(comment => /*#__PURE__*/React.createElement(\"li\", {\n    key: comment.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, comment.body))), /*#__PURE__*/React.createElement(NewComment, {\n    currentUser: testUser,\n    onAddComment: handleAddComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  })));\n};\nconst Loading = styled.div`\n  text-align: center;\n  padding: 20px;\n  font-size: 1.5rem;\n  color: #555;\n`;\nconst Container = styled.div`\n  padding: 20px;\n`;\nconst Header = styled.header`\n  margin-bottom: 20px;\n\n  h1 {\n    font-size: 2rem;\n    color: #333;\n  }\n\n  p {\n    font-size: 1.2rem;\n    color: #666;\n  }\n`;\nconst Section = styled.section`\n  margin-bottom: 20px;\n\n  h2 {\n    font-size: 1.5rem;\n    color: #333;\n  }\n\n  ul {\n    list-style: none;\n    padding: 0;\n\n    li {\n      background: #f9f9f9;\n      margin: 5px 0;\n      padding: 10px;\n      border-radius: 5px;\n    }\n  }\n`;\nexport default BookClubPage;","map":{"version":3,"names":["React","useState","useParams","styled","NewComment","testUser","username","testClub","id","name","books","title","cover","description","genre","members","comments","rname","body","created_at","BookClubPage","bookClub","setComments","handleAddComment","newComment","fetch","method","headers","JSON","stringify","then","response","status","alert","catch","error","createElement","Loading","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Container","Header","Section","map","member","key","book","comment","currentUser","onAddComment","div","header","section"],"sources":["/home/kellyhimself/Development/phase-4/Backend-Bookclub/client/src/pages/BookClubPage.js"],"sourcesContent":["import React, {useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\n//import Comments from \"../components/Comment\";\nimport NewComment from \"../components/NewComment.js\";\n//import CommentList from \"../components/CommentList.js\";\n//import DicussionModal from \"../components/CommentList.js\";\n\nconst testUser = { username: \"Duane\" };\n//sample bookclub for testing\nconst testClub = {\n  id: 1,\n  name: \"Social Justice\",\n  books: [\n    { id: 1, title: \"reject finance bill\" },\n    { id: 2, title: \"must go\" },\n  ],\n  cover:\n    \"https://i.pinimg.com/736x/28/8d/e3/288de3c1d0b35cc50bc018acb879573c.jpg\",\n  description: \"Books focusing on social issues and activism.\",\n  genre: \"Social Justice\",\n  members: [\n    { id: 1, name: \"Kelly1\" },\n    { id: 2, name: \"Kelly2\" },\n    { id: 3, name: \"Kelly3\" },\n    { id: 4, name: \"Kelly4\" },\n  ],\n  comments: [\n    {\n      rname: \"User1\",\n      body: \"Great club!\",\n      created_at: \"2024-07-12T10:30:00Z\",\n    },\n    {\n      id: 2,\n      username: \"User2\",\n      body: \"I love the discussions here.\",\n      created_at: \"2024-07-12T11:15:00Z\",\n    },\n  ],\n};\n\nconst BookClubPage = () => {\n  const [bookClub] = useState(null);\n  const { id } = useParams();\n  const [setComments] = useState([]);\n  //const [user, setUser] = useState(null); // Placeholder for user, ensure it's defined\n\n  //Fetch the clicked bookclub\n  /*   useEffect(() => {\n    fetch(`/book_clubs/${id}`)\n      .then((response) => response.json())\n      .then((data) => setBookClub(data));\n  }, [id]);\n\n  if (!bookClub) {\n    return <Loading>Loading...</Loading>;\n  }\n */\n\n  //fetch comments from the database\n  const handleAddComment = (newComment) => {\n    fetch(`/book_clubs/${id}/comments`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newComment),\n    })\n      .then((response) => {\n        if (response.status === 201) {\n          // Comment added successfully\n          alert(\"comment added\");\n        } else {\n          // Handle error\n          alert(\"there was an error adding your comment\");\n        }\n      })\n      .catch((error) => {\n        // Handle error\n      });\n\n    if (!bookClub) {\n      return <Loading>Loading...</Loading>;\n    }\n\n    setComments([...testClub.comments, newComment]);\n  };\n\n  // const handleDeleteComment = (id) => {\n  //   const updatedComments = comments.filter((comment) => comment.id !== id);\n  //   setComments(updatedComments);\n  // };\n\n  // const handleUpdateComment = (updatedCommentObj) => {\n  //   const updatedComment = comments.map((comment) => {\n  //     if (comment.id === updatedCommentObj.id) {\n  //       return updatedCommentObj;\n  //     } else {\n  //       return comment;\n  //     }\n  //   });\n  //   setComments(updatedComment);\n  // };\n\n  return (\n    <Container>\n      <Header>\n        <h1>{testClub.name}</h1>\n        <p>{testClub.description}</p>\n      </Header>\n      <Section>\n        <h2>Members</h2>\n        <ul>\n          {testClub.members.map((member) => (\n            <li key={member.id}>{member.name}</li>\n          ))}\n        </ul>\n      </Section>\n      <Section>\n        <h2>Available Books</h2>\n        <ul>\n          {testClub.books.map((book) => (\n            <li key={book.id}>{book.title}</li>\n          ))}\n        </ul>\n\n        <h2>Comments</h2>\n        <ul>\n          {testClub.comments.map((comment) => (\n            <li key={comment.username}>{comment.body}</li>\n          ))}\n        </ul>\n        {/* <CommentList\n          comments={comments}\n          onCommentUpdate={handleUpdateComment}\n          onCommentDelete={handleDeleteComment}\n        /> */}\n        <NewComment currentUser={testUser} onAddComment={handleAddComment} />\n      </Section>\n    </Container>\n  );\n};\n\nconst Loading = styled.div`\n  text-align: center;\n  padding: 20px;\n  font-size: 1.5rem;\n  color: #555;\n`;\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Header = styled.header`\n  margin-bottom: 20px;\n\n  h1 {\n    font-size: 2rem;\n    color: #333;\n  }\n\n  p {\n    font-size: 1.2rem;\n    color: #666;\n  }\n`;\n\nconst Section = styled.section`\n  margin-bottom: 20px;\n\n  h2 {\n    font-size: 1.5rem;\n    color: #333;\n  }\n\n  ul {\n    list-style: none;\n    padding: 0;\n\n    li {\n      background: #f9f9f9;\n      margin: 5px 0;\n      padding: 10px;\n      border-radius: 5px;\n    }\n  }\n`;\n\nexport default BookClubPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}