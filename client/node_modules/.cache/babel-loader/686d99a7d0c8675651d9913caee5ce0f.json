{"ast":null,"code":"import React,{useState}from\"react\";import{Button,Error,Input,FormField,Label}from\"../styles/tt\";function LoginForm(_ref){let{onLogin}=_ref;const[username,setUsername]=useState(\"\");const[password,setPassword]=useState(\"\");const[errors,setErrors]=useState([]);const[isLoading,setIsLoading]=useState(false);function handleSubmit(e){e.preventDefault();setIsLoading(true);fetch(\"/login\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({username,password})}).then(r=>{setIsLoading(false);if(r.ok){r.json().then(user=>onLogin(user));}else{r.json().then(err=>setErrors(err.errors));}});}return/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(FormField,null,/*#__PURE__*/React.createElement(Label,{htmlFor:\"username\"},\"Username\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",id:\"username\",autoComplete:\"off\",value:username,onChange:e=>setUsername(e.target.value)})),/*#__PURE__*/React.createElement(FormField,null,/*#__PURE__*/React.createElement(Label,{htmlFor:\"password\"},\"Password\"),/*#__PURE__*/React.createElement(Input,{type:\"password\",id:\"password\",autoComplete:\"current-password\",value:password,onChange:e=>setPassword(e.target.value)})),/*#__PURE__*/React.createElement(FormField,null,/*#__PURE__*/React.createElement(Button,{variant:\"fill\",color:\"primary\",type:\"submit\"},isLoading?\"Loading...\":\"Login\")),/*#__PURE__*/React.createElement(FormField,null,errors.map(err=>/*#__PURE__*/React.createElement(Error,{key:err},err))));}export default LoginForm;","map":{"version":3,"names":["React","useState","Button","Error","Input","FormField","Label","LoginForm","_ref","onLogin","username","setUsername","password","setPassword","errors","setErrors","isLoading","setIsLoading","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","r","ok","json","user","err","createElement","onSubmit","htmlFor","type","id","autoComplete","value","onChange","target","variant","color","map","key"],"sources":["/home/kellyhimself/Development/phase-4/online-book-club-platform/src/components/LoginForm.js"],"sourcesContent":["\nimport React, { useState } from \"react\";\nimport { Button, Error, Input, FormField, Label } from \"../styles/tt\";\n\nfunction LoginForm({ onLogin }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setIsLoading(true);\n    fetch(\"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, password }),\n    }).then((r) => {\n      setIsLoading(false);\n      if (r.ok) {\n        r.json().then((user) => onLogin(user));\n      } else {\n        r.json().then((err) => setErrors(err.errors));\n      }\n    });\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormField>\n        <Label htmlFor=\"username\">Username</Label>\n        <Input\n          type=\"text\"\n          id=\"username\"\n          autoComplete=\"off\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n      </FormField>\n      <FormField>\n        <Label htmlFor=\"password\">Password</Label>\n        <Input\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </FormField>\n      <FormField>\n        <Button variant=\"fill\" color=\"primary\" type=\"submit\">\n          {isLoading ? \"Loading...\" : \"Login\"}\n        </Button>\n      </FormField>\n      <FormField>\n        {errors.map((err) => (\n          <Error key={err}>{err}</Error>\n        ))}\n      </FormField>\n    </form>\n  );\n}\n\nexport default LoginForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}