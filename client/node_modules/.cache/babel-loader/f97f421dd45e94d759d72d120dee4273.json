{"ast":null,"code":"var _jsxFileName = \"/home/kellyhimself/Development/phase-4/Backend-Bookclub/client/src/styles/tt/Button.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nconst COLORS = {\n  primary: {\n    \"--main\": \"indigo\",\n    \"--accent\": \"white\"\n  },\n  secondary: {\n    \"--main\": \"lavenderblush\",\n    \"--accent\": \"indigo\"\n  }\n};\nfunction Button({\n  variant = \"fill\",\n  color = \"primary\",\n  ...props\n}) {\n  let Component;\n  if (variant === \"fill\") {\n    Component = FillButton;\n  } else if (variant === \"outline\") {\n    Component = OutlineButton;\n  }\n  return /*#__PURE__*/React.createElement(Component, Object.assign({\n    style: COLORS[color]\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 10\n    }\n  }));\n}\nconst ButtonBase = styled.button`\n  cursor: pointer;\n  font-size: 1rem;\n  border: 1px solid transparent;\n  border-radius: 6px;\n  padding: 8px 16px;\n  text-decoration: none;\n`;\nconst FillButton = styled(ButtonBase)`\n  background-color: var(--main);\n  color: var(--accent);\n\n  &:hover {\n    opacity: 0.9;\n  }\n`;\nconst OutlineButton = styled(ButtonBase)`\n  background-color: white;\n  color: var(--main);\n  border: 2px solid var(--main);\n\n  &:hover {\n    background: hsl(235deg 85% 97%);\n  }\n`;\nexport default Button;","map":{"version":3,"names":["React","styled","COLORS","primary","secondary","Button","variant","color","props","Component","FillButton","OutlineButton","createElement","Object","assign","style","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ButtonBase","button"],"sources":["/home/kellyhimself/Development/phase-4/Backend-Bookclub/client/src/styles/tt/Button.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst COLORS = {\n  primary: {\n    \"--main\": \"indigo\",\n    \"--accent\": \"white\",\n  },\n  secondary: {\n    \"--main\": \"lavenderblush\",\n    \"--accent\": \"indigo\",\n  },\n};\n\nfunction Button({ variant = \"fill\", color = \"primary\", ...props }) {\n  let Component;\n  if (variant === \"fill\") {\n    Component = FillButton;\n  } else if (variant === \"outline\") {\n    Component = OutlineButton;\n  }\n\n  return <Component style={COLORS[color]} {...props} />;\n}\n\nconst ButtonBase = styled.button`\n  cursor: pointer;\n  font-size: 1rem;\n  border: 1px solid transparent;\n  border-radius: 6px;\n  padding: 8px 16px;\n  text-decoration: none;\n`;\n\nconst FillButton = styled(ButtonBase)`\n  background-color: var(--main);\n  color: var(--accent);\n\n  &:hover {\n    opacity: 0.9;\n  }\n`;\n\nconst OutlineButton = styled(ButtonBase)`\n  background-color: white;\n  color: var(--main);\n  border: 2px solid var(--main);\n\n  &:hover {\n    background: hsl(235deg 85% 97%);\n  }\n`;\n\nexport default Button;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AAEtC,MAAMC,MAAM,GAAG;EACbC,OAAO,EAAE;IACP,QAAQ,EAAE,QAAQ;IAClB,UAAU,EAAE;EACd,CAAC;EACDC,SAAS,EAAE;IACT,QAAQ,EAAE,eAAe;IACzB,UAAU,EAAE;EACd;AACF,CAAC;AAED,SAASC,MAAMA,CAAC;EAAEC,OAAO,GAAG,MAAM;EAAEC,KAAK,GAAG,SAAS;EAAE,GAAGC;AAAM,CAAC,EAAE;EACjE,IAAIC,SAAS;EACb,IAAIH,OAAO,KAAK,MAAM,EAAE;IACtBG,SAAS,GAAGC,UAAU;EACxB,CAAC,MAAM,IAAIJ,OAAO,KAAK,SAAS,EAAE;IAChCG,SAAS,GAAGE,aAAa;EAC3B;EAEA,oBAAOX,KAAA,CAAAY,aAAA,CAACH,SAAS,EAAAI,MAAA,CAAAC,MAAA;IAACC,KAAK,EAAEb,MAAM,CAACK,KAAK;EAAE,GAAKC,KAAK;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,CAAC;AACvD;AAEA,MAAMC,UAAU,GAAGrB,MAAM,CAACsB,MAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMb,UAAU,GAAGT,MAAM,CAACqB,UAAU,CAAC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMX,aAAa,GAAGV,MAAM,CAACqB,UAAU,CAAC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,eAAejB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module"}